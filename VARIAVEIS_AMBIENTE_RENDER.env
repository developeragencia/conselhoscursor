# ========================================
# VARI√ÅVEIS DE AMBIENTE - CONSELHOS ESOT√âRICOS
# RENDER DEPLOYMENT
# ========================================
# Data: 26/10/2025
# URL: https://conselhos-esotericos.onrender.com
# ========================================

# === AMBIENTE ===
NODE_ENV=production
PORT=10000

# === BANCO DE DADOS NEON ===
# Projeto: royal-paper-66041902
# Regi√£o: US East (N. Virginia)
# PostgreSQL: 16
DATABASE_URL=postgresql://neondb_owner:npg_ksSvMNnFX9m5@ep-dry-moon-a41gklbl-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require

NEON_DATABASE_URL=postgresql://neondb_owner:npg_ksSvMNnFX9m5@ep-dry-moon-a41gklbl-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require

# === SEGURAN√áA ===
# IMPORTANTE: Gerar secrets √∫nicos no Render Dashboard
# Clique em "Generate" para cada uma dessas vari√°veis:
JWT_SECRET=[GERAR NO RENDER - Generate Value]
SESSION_SECRET=[GERAR NO RENDER - Generate Value]

# === CORS ===
# Atualizar com a URL real do Render ap√≥s deploy
ALLOWED_ORIGINS=https://conselhos-esotericos.onrender.com
CORS_ORIGIN=https://conselhos-esotericos.onrender.com

# === STRIPE (PAGAMENTOS) ===
# Obter no Dashboard: https://dashboard.stripe.com/apikeys
# Usar TEST keys para desenvolvimento, LIVE keys para produ√ß√£o
STRIPE_SECRET_KEY=sk_test_[SUA_CHAVE_AQUI]
STRIPE_PUBLISHABLE_KEY=pk_test_[SUA_CHAVE_AQUI]

# Webhook Secret (ap√≥s configurar webhook no Stripe)
# URL do webhook: https://conselhos-esotericos.onrender.com/api/payments/webhook
STRIPE_WEBHOOK_SECRET=whsec_[GERAR_NO_STRIPE_WEBHOOKS]

# === ANTHROPIC (IA - OPCIONAL) ===
# Para features de IA (se implementado)
ANTHROPIC_API_KEY=[OPCIONAL]

# === GOOGLE AUTH (OPCIONAL) ===
# Para login social (se implementado)
GOOGLE_CLIENT_ID=[OPCIONAL]
GOOGLE_CLIENT_SECRET=[OPCIONAL]

# ========================================
# INSTRU√á√ïES DE CONFIGURA√á√ÉO NO RENDER
# ========================================
#
# 1. Acesse: https://dashboard.render.com/web/srv-d3v2qhbe5dus73a2vifg
# 2. V√° em: Environment
# 3. Clique em: Add Environment Variable
# 4. Adicione cada vari√°vel acima
# 5. Para JWT_SECRET e SESSION_SECRET: clique em "Generate"
# 6. Salve as mudan√ßas (redeploy autom√°tico)
#
# ========================================

# === VARI√ÅVEIS J√Å CONFIGURADAS ===
# ‚úÖ NODE_ENV=production
# ‚úÖ PORT=10000
# ‚úÖ DATABASE_URL (conectado ao Neon)
# ‚úÖ NEON_DATABASE_URL (conectado ao Neon)

# === VARI√ÅVEIS A CONFIGURAR ===
# ‚è≥ JWT_SECRET (gerar no Render)
# ‚è≥ SESSION_SECRET (gerar no Render)
# ‚è≥ STRIPE_SECRET_KEY (obter do Stripe)
# ‚è≥ STRIPE_PUBLISHABLE_KEY (obter do Stripe)
# ‚è≥ STRIPE_WEBHOOK_SECRET (ap√≥s criar webhook)
# ‚è≥ ALLOWED_ORIGINS (atualizar com URL)
# ‚è≥ CORS_ORIGIN (atualizar com URL)

# ========================================
# OBSERVA√á√ïES IMPORTANTES
# ========================================
#
# üîí SEGURAN√áA:
# - NUNCA commite este arquivo com valores reais
# - Use secrets do Render para valores sens√≠veis
# - JWT_SECRET deve ter no m√≠nimo 32 caracteres
# - SESSION_SECRET deve ser diferente do JWT_SECRET
#
# üóÑÔ∏è BANCO DE DADOS:
# - Neon PostgreSQL 16 j√° est√° conectado
# - Tabelas foram criadas automaticamente na inicializa√ß√£o
# - SSL est√° habilitado (sslmode=require)
# - Connection pooling est√° ativo
#
# üí≥ STRIPE:
# - Use TEST keys em desenvolvimento
# - Configure webhook para receber confirma√ß√µes de pagamento
# - URL do webhook: /api/payments/webhook
# - Eventos: payment_intent.succeeded, payment_intent.payment_failed
#
# üåê CORS:
# - Permitir apenas o dom√≠nio do Render
# - Atualizar ap√≥s cada redeploy se URL mudar
#
# ========================================

