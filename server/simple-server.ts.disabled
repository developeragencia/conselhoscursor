import express from "express";
import { createServer } from "http";
import { db } from "./db";
import { consultants, testimonials, blogPosts, bannerSlides, services } from "@shared/schema";
import cors from "cors";

const app = express();

// Minimal middleware
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: false }));
app.use(cors());

// Basic API endpoints needed for PWA
app.get("/api/consultants/featured", async (req, res) => {
  try {   
    const featuredConsultants = await db.select().from(consultants).limit(6);
    res.json(featuredConsultants);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch consultants' });
  }
});

app.get("/api/testimonials", async (req, res) => {
  try {
    const testimonialsData = await db.select().from(testimonials).limit(6);
    res.json(testimonialsData);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch testimonials' });
  }
});

app.get("/api/blog-posts", async (req, res) => {
  try {
    const posts = await db.select().from(blogPosts).limit(3);
    res.json(posts);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch blog posts' });
  }
});

app.get("/api/banner-slides", async (req, res) => {
  try {
    const slides = await db.select().from(bannerSlides).limit(3);
    res.json(slides);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch banner slides' });
  }
});

app.get("/api/services", async (req, res) => {
  try {
    const servicesData = await db.select().from(services);
    res.json(servicesData);
  } catch (error) {
    res.status(500).json({ error: 'Failed to fetch services' });
  }
});

// Health check
app.get("/api/health", (req, res) => {
  res.json({ status: "OK", timestamp: new Date().toISOString() });
});

// Create server
const server = createServer(app);
const PORT = process.env.PORT || 5000;

server.listen(PORT, "0.0.0.0", () => {
  console.log(`Clean server running on port ${PORT}`);
});